name: Sync + tests

on:
    # Push to master will deploy a dev version, push to stable deploys the latest version (and syncs the master branch)
    push:
        branches: [ master, stable ]
    # PRs will run tests (skip deployment)
    pull_request:
        branches: [ master, stable ]
    # A release via GitHub releases will deploy the latest version
    workflow_call:
    workflow_dispatch:

jobs:
    sync_branches:
        name: Sync branches
        if: ((github.ref == 'refs/heads/stable') && (github.event_name == 'push' ))
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Source code
                uses: actions/checkout@v3
                with:
                    token: ${{ secrets.GH_TOKEN }}

            -   name: Git merge stable -> master
                run: |
                    git config --global user.name "autosync[bot] ðŸ”ƒ"
                    git config --global user.email "autosync[bot]@users.noreply.github.com"

                    git fetch --unshallow
                    git checkout master
                    git merge -s recursive --squash --no-commit stable
                    git add -A
                    git diff-index --quiet HEAD || git commit -m "[skip ci] Automatic sync from stable"

                    git push origin master
    lint:
        name: Lint
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js 16 
              uses: actions/setup-node@v3 
              with:
                node-version: 16

            - name: Install Dependencies
              run: npm ci

            - name: Load Cache
              uses: actions/cache@v3
              with:
                path: |
                  node_modules
                key: cache-${{ github.run_id }}

            - run: npm run lint

    build_and_test:
        name: Build & Test
        needs: [lint]
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ ubuntu-latest ]
                node-version: [ 16, 18 ]

        steps:
            - uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}

            - name: Cache Node Modules
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules
                  key: cache-${{ github.run_id }}
            
            - name: Install playwright deps
              run : npx playwright install --with-deps 

            - name: Turbo cache
              id: turbo-cache
              uses: actions/cache@v3
              with:
                path: .turbo
                key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
                restore-keys: |
                    turbo-${{ github.job }}-${{ github.ref_name }}-
            
            - name: Build
              run: npm run ci:build

            - name: Run Windows or MacOs tests
              run: npm test
              if: ${{ matrix.os == 'windows-latest' || matrix.os == 'macos-latest' }}

            - name: Run Linux tests
              run: xvfb-run --auto-servernum -- npm test
              if: ${{ matrix.os == 'ubuntu-latest'}}

    # test_antibot:
    #     name: Test antibot services (with badges)
    #     if: ((github.ref == 'refs/heads/master') && (github.event_name == 'push'))
    #     runs-on: ubuntu-latest
    #     needs: [ build_and_test ]
    #     steps:
    #     - name: Checkout Source code
    #       uses: actions/checkout@v3

    #     - name: Cache Node Modules
    #       uses: actions/cache@v3
    #       with:
    #         path: |
    #             node_modules
    #         key: cache-${{ github.run_id }}

    #     - name: Turbo cache
    #       id: turbo-cache
    #       uses: actions/cache@v3
    #       with:
    #         path: .turbo
    #         key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
    #         restore-keys: |
    #           turbo-${{ github.job }}-${{ github.ref_name }}-

    #     - name: Build
    #       run: npm run ci:build
        
    #     - name: Install Playwright
    #       run: npx playwright install --with-deps

    #     - id: tests
    #       run: | 
    #           echo "::set-output name=botd::$(xvfb-run --auto-servernum -- node $GITHUB_WORKSPACE/test/antibot-services/antibot.js botd)"
    #           echo "::set-output name=creepjs::$(xvfb-run --auto-servernum -- node $GITHUB_WORKSPACE/test/antibot-services/antibot.js creepjs)"
    #     - name: CreepJS badge
    #       uses: RubbaBoy/BYOB@v1.3.0
    #       with:
    #         NAME: CreepJS
    #         LABEL: 'CreepJS (chromium, linux)'
    #         STATUS: ${{ steps.tests.outputs.creepjs }}
    #         COLOR: 7900aa
    #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     - name: BotD badge
    #       uses: RubbaBoy/BYOB@v1.3.0
    #       with:
    #         NAME: BotD
    #         LABEL: 'BotD (chromium, linux)'
    #         STATUS: ${{ steps.tests.outputs.botd }}
    #         COLOR: 0079AA
    #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}